//
//  NetworkManager.swift
//  CryptoTestApp
//
//  Created by Ludmila Rezunic on 02.08.2022.
//

import Foundation


final class NetworkManager {
    private var liveRequest: ETHCostRequest<ETHLiveResource>? // –Ø —Ç–∞–∫ –ø–æ–Ω–∏–º–∞—é —ç—Ç–æ –ø—Ä–æ—Å—Ç–æ —Ö—Ä–∞–Ω–∏—Ç—Å—è, —á—Ç–æ–±—ã –Ω–µ –≤—ã—Å–∫–æ—á–∏—Ç—å –∏–∑ –ø–∞–º—è—Ç–∏?
    // —è –±—ã –ø—Ä–µ–¥–ª–æ–∂–∏–ª —Å–¥–µ–ª–∞—Ç—å 1 –ø–æ–ª–µ-—Å–ø–∏—Å–æ–∫ –∏–ª–∏ —Å—ç—Ç –∏–ª–∏ —Ä–µ—à–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É –ø–æ-–¥—Ä—É–≥–æ–º—É, –Ω–µ —Ö–æ—á–µ—Ç—Å—è –ø–ª–æ–¥–∏—Ç—å –ø–æ –±–µ—Å–ø–æ–ª–µ–∑–Ω–æ–º—É –ø–æ–ª—é –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
    private var historicRequest: ETHCostRequest<ETHHistoricalResource>?
    private var time: String?
    var isLoading = false // –ø—É—Å—Ç—å –ø—Ä–∏–≤–∞—Ç–Ω—ã–º –±—É–¥–µ—Ç –ª—É—á—à–µ
    
    /// –ú–µ—Ç–æ–¥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ –∫—É—Ä—Å–∞
    func fetchLiveETHCost(with completion: @escaping (ETHCostResponse?) -> ()) {
        guard !isLoading else {
            return
        }
        
        isLoading = true
        let resource = ETHLiveResource()
        let request = ETHCostRequest(resource: resource)
        liveRequest = request
        request.execute { response in
            DispatchQueue.main.async {
                completion(response)
                self.isLoading = false
            }
        }
    }
    
    /// –ú–µ—Ç–æ–¥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫—É—Ä—Å–∞ –ø–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –¥–∞—Ç–µ –∏ –≤—Ä–µ–º–µ–Ω–∏
    func fetchETHCost(by date: Date, with completion: @escaping (ETHCostResponseForTime?) -> ()) {
        guard !isLoading else {
            return
        }
        
        isLoading = true
        let resource = ETHHistoricalResource()
        resource.time = String(floor(date.timeIntervalSince1970)) // ü§î
        let request = ETHCostRequest(resource: resource)
        historicRequest = request
        request.execute { response in
            DispatchQueue.main.async {
                completion(response)
                self.isLoading = false
            }
        }
    }
}
